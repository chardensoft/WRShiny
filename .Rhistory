scale_color_distiller(direction = -1, palette = 4, name = "# of bets") +
theme_grey()
ggplot(results) +
geom_point(aes(x = SPR, y = SPRgain, color = SPRbets)) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Results of all betting strategies on NFL action",
subtitle = "Bets of $100 on any bet that meets cutoffs of the strategy") +
scale_color_distiller(direction = -1, palette = 4, name = "# of bets") +
theme_dark()
ggplot(results) +
geom_point(aes(x = SPR, y = SPRgain, color = SPRbets)) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Results of all betting strategies on NFL action",
subtitle = "Bets of $100 on any bet that meets cutoffs of the strategy") +
scale_color_distiller(direction = -1, palette = 4, name = "# of bets") +
theme_classic()
ggplot(results) +
geom_point(aes(x = SPR, y = SPRgain, color = SPRbets)) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Results of all betting strategies on NFL action",
subtitle = "Bets of $100 on any bet that meets cutoffs of the strategy") +
scale_color_distiller(direction = -1, palette = 4, name = "# of bets") +
theme_classic() +
theme(panel.background = element_rect(fill = "lightblue",
colour = "lightblue"))
ggplot(results) +
geom_point(aes(x = SPR, y = SPRgain, color = SPRbets)) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Results of all betting strategies on NFL action",
subtitle = "Bets of $100 on any bet that meets cutoffs of the strategy") +
scale_color_distiller(direction = -1, palette = 4, name = "# of bets") +
theme_classic() +
theme(panel.background = element_rect(fill = "grey",
colour = "lightblue"))
ggplot(results) +
geom_point(aes(x = SPR, y = SPRgain, color = SPRbets)) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Results of all betting strategies on NFL action",
subtitle = "Bets of $100 on any bet that meets cutoffs of the strategy") +
scale_color_distiller(direction = -1, palette = 4, name = "# of bets") +
theme_classic() +
theme(panel.background = element_rect(fill = "#F5F5F5"))
ggplot(results) +
geom_point(aes(x = SPR, y = SPRgain, color = SPRbets)) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Results of all betting strategies on NFL action",
subtitle = "Bets of $100 on any bet that meets cutoffs of the strategy") +
scale_color_distiller(direction = -1, palette = 4, name = "# of bets") +
theme_classic() +
theme(panel.background = element_rect(fill = "#dddddd"))
ggplot(results) +
geom_point(aes(x = SPR, y = SPRgain, color = SPRbets)) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Results of all betting strategies on NFL action",
subtitle = "Bets of $100 on any bet that meets cutoffs of the strategy") +
scale_color_distiller(direction = -1, palette = 4, name = "# of bets") +
theme_classic() +
theme(panel.background = element_rect(fill = "#e5e5e5"))
spr_results <- filter(results, SPRgain > 200, SPR > 20, diff > -100, spread > -100)
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns",
subtitle = "Shape shows probability cutoff, color shows spread cutoff") +
theme_classic() +
theme(panel.background = element_rect(fill = "#e5e5e5")) +
scale_color_distiller(direction = -1, palette = 7, name = "cutoff spread difference")
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns",
subtitle = "Shape shows probability cutoff, color shows spread cutoff") +
theme_classic() +
theme(panel.background = element_rect(fill = "#545454")) +
scale_color_distiller(direction = -1, palette = 7, name = "cutoff spread difference")
ggplot(results) +
geom_point(aes(x = SPR, y = SPRgain, color = SPRbets)) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Results of all betting strategies on NFL action",
subtitle = "Bets of $100 on any bet that meets cutoffs of the strategy") +
scale_color_distiller(direction = -1, palette = 7, name = "# of bets") +
theme_classic() +
theme(panel.background = element_rect(fill = "#545454"))
ggplot(results) +
geom_point(aes(x = SPR, y = SPRgain, color = SPRbets)) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Results of all betting strategies on NFL action",
subtitle = "Bets of $100 on any bet that meets cutoffs of the strategy") +
scale_color_distiller(direction = -1, palette = 7, name = "# of bets") +
theme_classic() +
theme(panel.background = element_rect(fill = "#848484"))
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns",
subtitle = "Shape shows probability cutoff, color shows spread cutoff") +
theme_classic() +
theme(panel.background = element_rect(fill = "#848484")) +
scale_color_distiller(direction = -1, palette = 7, name = "cutoff spread difference")
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns") +
theme_classic() +
theme(panel.background = element_rect(fill = "#848484")) +
scale_color_distiller(direction = -1, palette = 7, name = "spread cutoff") +
scale_shape(name = "probability cutoff")
ggplot(results) +
geom_point(aes(x = SPR, y = SPRgain, color = SPRbets)) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Results of all betting strategies on NFL action",
subtitle = "Bets of $100 on any bet that meets cutoffs of the strategy") +
scale_color_distiller(direction = -1, palette = 7, name = "# of bets") +
theme_classic() +
theme(panel.background = element_rect(fill = "#ffffff"))
spr_results <- filter(results, SPRgain > 200, SPR > 20, diff > -100, spread > -100)
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns") +
theme_classic() +
theme(panel.background = element_rect(fill = "#848484")) +
scale_color_distiller(direction = -1, palette = 7, name = "spread cutoff") +
scale_shape(name = "probability cutoff")
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns") +
theme_classic() +
theme(panel.background = element_rect(fill = "#ffffff")) +
scale_color_distiller(direction = -1, palette = 7, name = "spread cutoff") +
scale_shape(name = "probability cutoff")
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns") +
theme_classic() +
theme(panel.background = element_rect(fill = "#ffffff")) +
# scale_color_distiller(direction = -1, palette = 7, name = "spread cutoff") +
scale_shape(name = "probability cutoff")
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns") +
theme_classic() +
# scale_color_distiller(direction = -1, palette = 7, name = "spread cutoff") +
scale_shape(name = "probability cutoff")
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns") +
theme_classic() +
scale_color_distiller(name = "spread cutoff") +
scale_shape(name = "probability cutoff")
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns") +
theme_classic() +
scale_color(name = "spread cutoff") +
scale_shape(name = "probability cutoff")
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns") +
theme_classic() +
scale_color_manual(name = "spread cutoff") +
scale_shape(name = "probability cutoff")
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns") +
theme_classic() +
scale_color_continuous(name = "spread cutoff") +
scale_shape(name = "probability cutoff")
ggplot(results) +
geom_point(aes(x = SPR, y = SPRgain, color = SPRbets)) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Results of all betting strategies on NFL action",
subtitle = "Bets of $100 on any bet that meets cutoffs of the strategy") +
scale_color_distiller(direction = -1, palette = 7, name = "# of bets") +
theme_classic() +
theme(panel.background = element_rect(fill = "#ffffff"))
spr_results <- filter(results, SPRgain > 200, SPR > 20, diff > -100, spread > -100)
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns") +
theme_classic() +
scale_color_continuous(name = "spread cutoff") +
scale_shape(name = "probability cutoff")
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns") +
theme_classic() +
scale_color_continuous(name = "spread cutoff") +
scale_shape(name = "probability cutoff") +
legend(x = 0, y = 0)
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns") +
theme_classic() +
scale_color_continuous(name = "spread cutoff") +
scale_shape(name = "probability cutoff") +
theme(legend.position = c(0, 0))
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns") +
theme_classic() +
scale_color_continuous(name = "spread cutoff") +
scale_shape(name = "probability cutoff") +
theme(legend.position = c(100, 0))
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns") +
theme_classic() +
scale_color_continuous(name = "spread cutoff") +
scale_shape(name = "probability cutoff") +
theme(legend.position = c(80, 0))
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns") +
theme_classic() +
scale_color_continuous(name = "spread cutoff") +
scale_shape(name = "probability cutoff") +
theme(legend.position = c(50, 0))
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns") +
theme_classic() +
scale_color_continuous(name = "spread cutoff") +
scale_shape(name = "probability cutoff") +
theme(legend.position = c(50, 50))
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns") +
theme_classic() +
scale_color_continuous(name = "spread cutoff") +
scale_shape(name = "probability cutoff") +
theme(legend.position = c(5, 50))
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns") +
theme_classic() +
scale_color_continuous(name = "spread cutoff") +
scale_shape(name = "probability cutoff") +
theme(legend.position = c(.5, .50))
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns") +
theme_classic() +
scale_color_continuous(name = "spread cutoff") +
scale_shape(name = "probability cutoff") +
theme(legend.position = c(.8, .8))
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns") +
theme_classic() +
scale_color_continuous(name = "spread cutoff") +
scale_shape(name = "probability cutoff") +
theme(legend.position = c(.6, .8))
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns") +
theme_classic() +
scale_color_continuous(name = "spread cutoff") +
scale_shape(name = "probability cutoff") +
theme(legend.position = c(.89, .8))
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns") +
theme_classic() +
scale_color_continuous(name = "spread cutoff") +
scale_shape(name = "probability cutoff") +
theme(legend.position = c(.8, .6))
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns") +
theme_classic() +
scale_color_continuous(name = "spread cutoff") +
scale_shape(name = "probability cutoff") +
theme(legend.position = c(.9, .7))
ggplot(results) +
geom_point(aes(x = SPR, y = SPRgain, color = SPRbets)) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Results of all betting strategies on NFL action",
subtitle = "Bets of $100 on any bet that meets cutoffs of the strategy") +
scale_color_distiller(direction = -1, palette = 7, name = "# of bets") +
theme_classic() +
theme(panel.background = element_rect(fill = "#ffffff"),
legend.position = c(.9, .7))
ggplot(results) +
geom_point(aes(x = SPR, y = SPRgain, color = SPRbets)) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Results of all betting strategies on NFL action",
subtitle = "Bets of $100 on any bet that meets cutoffs of the strategy") +
scale_color_distiller(direction = -1, palette = 7, name = "# of bets") +
theme_classic() +
theme(panel.background = element_rect(fill = "#ffffff"),
legend.position = c(.9, .4))
ggplot(results) +
geom_point(aes(x = SPR, y = SPRgain, color = SPRbets)) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Results of all betting strategies on NFL action",
subtitle = "Bets of $100 on any bet that meets cutoffs of the strategy") +
scale_color_distiller(direction = -1, palette = 7, name = "# of bets") +
theme_classic() +
theme(panel.background = element_rect(fill = "#ffffff"),
legend.position = c(.9, .3))
ggplot(results) +
geom_point(aes(x = SPR, y = SPRgain, color = SPRbets)) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Results of all betting strategies on NFL action",
subtitle = "Bets of $100 on any bet that meets cutoffs of the strategy") +
scale_color_distiller(direction = -1, palette = 7, name = "# of bets") +
theme_classic() +
theme(panel.background = element_rect(fill = "#ffffff"),
legend.position = c(.9, .3))
spr_results <- filter(results, SPRgain > 200, SPR > 20, diff > -100, spread > -100)
ggplot(spr_results) +
geom_point(aes(x = SPR, y = SPRgain, shape = factor(prob),
color = spread), size = 3) +
xlab("Total Return (%)") +
ylab("Total Return ($)") +
labs(title = "Showing Strategies with Best Returns") +
theme_classic() +
scale_color_continuous(name = "spread cutoff") +
scale_shape(name = "probability cutoff") +
theme(legend.position = c(.9, .7))
library(nbastatR)
comb_data <- draft_combines(years = c(2001:2022))
write_csv(comb_data, "combineData.csv")
library(nbastatR)
comb_data <- draft_combines(years = c(2001:2022))
library(nbastatR, readr)
library(c(ggplot2, rvest))
install.pacakges('pload')
install.pacakges('pacman')
install.packages('pacman')
p_load(nbastatR, readr)
library(pacman)
p_load(nbastatR, readr)
p_load(ggplot2, rvest)
iris
lm(Sepal.Length ~ ., iris)
shiny::runApp('Desktop/curr_Chris/WoodReport/WRShiny')
shiny::runApp()
runApp()
Wrunners %>% arrange(place)
Wrunners_table %>% arrange(place)
Wrunners_table <- bind_rows(read_json(path = "data/Wrunners.json"))
Wrunners_table %>% arrange(place)
runApp()
Wraces_table <- bind_rows(read_json(path = "data/Wraces.json"))
Wraces_table %>% arrange(date)
Wraces_table %>% arrange(desc(date))
runApp()
runApp()
install.packages('firebase')
remotes::install_github("JohnCoene/firebase")
runApp()
usethis::edit_r_environ()
firebase::firebase_config(
api_key = 'AIzaSyBlhNffpa9VhvduOe3gL2ldLDyOVIvdK8c'
project_id = "the-wood-report-7e7dd"
)
firebase::firebase_config(
api_key = 'AIzaSyBlhNffpa9VhvduOe3gL2ldLDyOVIvdK8c',
project_id = "the-wood-report-7e7dd"
)
runApp()
runApp()
runApp()
### to JSON!!!! #######
rm(list = ls())
library(jsonlite)
setwd("~/Desktop/curr_Chris/WoodReport/xcData")
############ MEN
testrunners <- read.csv("database files/Mrunners.csv")
testrunners <- testrunners[which(testrunners$active == "active"),]
testrunners <- testrunners[,-which(colnames(testrunners) %in% c("RUNNER.ID"))]
# testrunners$place <- as.integer(testrunners$place)
# testrunners$rank <- as.numeric(testrunners$rank)
# testrunners$previous_rank <- as.numeric(testrunners$previous_rank)
# testrunners$previous_place <- as.integer(testrunners$previous_place)
write_json(testrunners, "WRShiny/www/runners.json")
test_teams <- read.csv("database files/Mteams.csv")
write_json(test_teams, "WRShiny/www/teams.json")
testraces <- read.csv("database files/Mraces.csv")
write_json(testraces, "WRShiny/www/races.json")
############ WOMEN
Wtestrunners <- read.csv("database files/Wrunners.csv")
Wtestrunners <- Wtestrunners[which(Wtestrunners$active == "active"),]
Wtestrunners <- Wtestrunners[,-which(colnames(Wtestrunners) %in% c("RUNNER.ID"))]
# Wtestrunners$place <- as.integer(Wtestrunners$place)
# Wtestrunners$rank <- as.numeric(Wtestrunners$rank)
# Wtestrunners$previous_rank <- as.numeric(Wtestrunners$previous_rank)
# Wtestrunners$previous_place <- as.integer(Wtestrunners$previous_place)
write_json(Wtestrunners, "WRShiny/www/Wrunners.json")
Wtest_teams <- read.csv("database files/Wteams.csv")
write_json(Wtest_teams, "WRShiny/www/Wteams.json")
Wtestraces <- read.csv("database files/Wraces.csv")
write_json(Wtestraces, "WRShiny/www/Wraces.json")
updated <- read_json("WRShiny/www/updated.json")
did <- as.character(updated[[1]]$did)
write_json(data.frame(did=did, updated=substr(date(), 5, 10)), "WRShiny/www/updated.json")
##### Other Data
div <- data.frame(name = unique(c(Wtest_teams$div, test_teams$div)))
conf <- data.frame(name = unique(c(Wtest_teams$conf, test_teams$conf)))
region <- data.frame(name = unique(c(Wtest_teams$reg, test_teams$reg)))
write_json(div, "WRShiny/www/div.json")
write_json(conf, "WRShiny/www/conf.json")
write_json(region, "WRShiny/www/region.json")
shiny::runApp('WRShiny')
runApp('WRShiny')
library(shiny)
library(dplyr)
library(uuid)
library(DT)
library(jsonlite)
source("database2 (team).R")
source("update.R")
runners_table <- bind_rows(read_json(path = "www/runners.json"))
teams_table <- bind_rows(read_json(path = "www/teams.json"))
Wteams_table <- bind_rows(read_json(path = "www/Wteams.json"))
Wrunners_table <- bind_rows(read_json(path = "www/Wrunners.json"))
Wraces_table <- bind_rows(read_json(path = "www/Wraces.json"))
races_table <- bind_rows(read_json(path = "www/races.json"))
Wrunners_table <- Wrunners_table %>% arrange(place)
runners_table <- runners_table %>% arrange(place)
Wraces_table <- Wraces_table %>% arrange(desc(date))
races_table <- races_table %>% arrange(desc(date))
